# Set another default user than root for security reasons.
# user						xxx;

# The maximum number of connections for Nginx is calculated by:
# max_clients = worker_processes * worker_c
worker_processes			auto;

# Maximum file descriptors that can be opened per process
# This should be > worker_connections
worker_rlimit_nofile		8192;

# Log errors to the following location. Feel free to change these.
error_log					logs/error.log warn;
# Log NXingx process errors to the following location. Feel free to change these.
pid							logs/nginx.pid;

events {

    # When you need > 8000 * cpu_cores connections, you start optimizing
    # your OS, and this is probably the point at where you hire people
    # who are smarter than you, this is *a lot* of requests.
    worker_connections		8000;

    # This sets up some smart queueing for accept(2)'ing requests
    # Set it to "on" if you have > worker_processes
    accept_mutex			off;

    # These settings are OS specific, by defualt Nginx uses select(2),
    # however, for a large number of requests epoll(2) and kqueue(2)
    # are generally faster than the default (select(2))
    # use epoll; # enable for Linux 2.6+
    # use kqueue; # enable for *BSD (FreeBSD, OS X, ..)

}

http {
    # Disables emitting Nginx version in error messages and in the 'Server' HTTP response header.
    # Default: on
    server_tokens off;

    # Include MIME type to file extension mappings list.
    include                 mime.types;
    # The default fallback MIME type.
    default_type            application/octet-stream;

    charset_types
                            text/css
                            text/plain
                            text/vnd.wap.wml
                            application/javascript
                            application/json
                            application/rss+xml
                            application/xml;

    # Format for our log files.
    log_format              main '$remote_addr - $remote_user [$time_local]  $status '
                                 '"$request" $body_bytes_sent "$http_referer" '
                                 '"$http_user_agent" "$http_x_forwarded_for"';

    # Log requests to the following location. Feel free to change this.
    access_log              logs/access.log  main;

    # The number of seconds to keep a connection open.
    keepalive_timeout       29;
    # Defines a timeout for reading client request body.
    client_body_timeout     10;
    # Defines a timeout for reading client request header.
    client_header_timeout   10;
    # Sets a timeout for transmitting a response to the client.
    send_timeout            10;
    # Limit requests from an IP address to five requests per second.
    # See http://nginx.org/en/docs/http/ngx_http_limit_req_module.html#limit_req_zone
    limit_req_zone          $binary_remote_addr zone=one:10m rate=5r/s;

    # To serve static files using Nginx efficiently.
    sendfile                on;
    tcp_nopush              on;
    tcp_nodelay             off;

    # Enable gzip compression.
    # Default: off
    gzip                    on;
    
    # Compression level (1-9).
    # 5 is a perfect compromise between size and CPU usage, offering about
    # 75% reduction for most ASCII files (almost identical to level 9).
    # Default: 1
    gzip_comp_level    5;
    # Enable GZIP over HTTP 1.0 (The default is HTTP 1.1).
    gzip_http_version       1.0;
    # Disable GZIP compression for IE 1 to 6.
    gzip_disable            "MSIE [1-6]\."

    # Compress data even for clients that are connecting to us via proxies,
    # identified by the "Via" header (required for CloudFront).
    # Default: off
    gzip_proxied            any;
    #gzip_min_length         1100;
    gzip_buffers            4 8k;
    # Enable GZIP compression for the following MIME types (text/html is included by default).
    gzip_types              # Plain Text
                            text/plain
                            text/css
                            text/mathml
                            text/x-component
                            application/rtf
                            text/xml
                            text/js
                            # JSON
                            application/javascript
                            application/json
                            application/manifest+json
                            application/x-web-app-manifest+json
                            text/cache-manifest
                            application/x-javascript
                            text/javascript
                            # XML
                            application/atom+xml
                            application/rss+xml
                            application/xslt+xml
                            application/xml
                            # Fonts
                            font/opentype
                            font/otf
                            font/truetype
                            application/font-woff
                            application/vnd.ms-fontobject
                            application/x-font-ttf
                            application/font-woff2
                            # Images
                            image/svg+xml
                            image/x-icon;
    # Tell proxies to cache both the gzipped and regular version of a resource
    # whenever the client's Accept-Encoding capabilities header varies;
    # Avoids the issue where a non-gzip capable client (which is extremely rare
    # today) would display gibberish if their proxy gave them the gzipped version.
    # Default: off
    gzip_vary          on;

    # Sets configuration for a virtual server. You can have multiple virtual servers.
    # See http://nginx.org/en/docs/http/ngx_http_core_module.html#server
    server {

        # Listen for requests on specified port including support for HTTP 2.0.
        # See http://nginx.org/en/docs/http/ngx_http_core_module.html#listen
        #listen                      443 http2 ssl default;
        listen [::]:80;
        listen 80;

        # Path for static files
        # While public makes sense for an example, /var/www/example.com/dist
        root /usr/share/nginx/html;

        index index.html index.htm;
        
        # Specify a charset
        charset utf-8;

        # The name of the virtual server where you can specify one or more domains that you own.
        server_name localhost;
        # server_name    example.com www.example.com *.example.com www.example.*;

        # Add 1 week expires header for static assets
        location ~* ^.+\.(css|js|jpg|jpeg|gif|png|ico|gz|svg|svgz|ttf|otf|woff|eot|mp4|ogg|ogv|webm)$ {
            expires 1w;
            access_log off;
        }

        # Whitelist allowed HTTP methods
        # Since this is just a read only web, we can only allow GET and HEAD.
        add_header Allow "GET, HEAD" always;
        if ($request_method !~ ^(GET|HEAD)$ )
        {
            # Return Method Not Allowed if not in the whitelist
            return 405;
        }

        # Match incoming requests with the following path and forward them to the specified location.
        # See http://nginx.org/en/docs/http/ngx_http_core_module.html#location
        location / {
            # First attempt to serve request as file, 
            # then fall back to redirecting to index.html
            try_files $uri /index.html @root;
        }

        # If nginx can't find a file, fallback to the homepage.
        location @root {
            rewrite .* / redirect;
        }

        # Include the basic h5bp config set
        include basic.conf;
    }
}